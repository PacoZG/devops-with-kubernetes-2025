name: Deploy Tagged Release to Production via ArgoCD

on:
  push:
    tags:
      - '[0-9]+.[0-9]+' # Trigger on tags like 1.0, 2.1, etc.
jobs:
  update-argocd-target:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Tag Name
        id: get_tag
        run: |
          TAG_NAME="${GITHUB_REF#refs/tags/}"
          echo "Detected tag: $TAG_NAME"
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_OUTPUT

      - name: Validate Tag Format (Optional but Recommended)
        run: |
          if ! [[ "${{ steps.get_tag.outputs.TAG_NAME }}" =~ ^[0-9]+\.[0-9]+$ ]]; then
            echo "::error::Tag name '${{ steps.get_tag.outputs.TAG_NAME }}' does not match required format 'vX.Y.Z'."
            exit 1
          fi

      - name: Install yq (YAML Processor)
        run: |
          sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/local/bin/yq
          sudo chmod +x /usr/local/bin/yq

      - name: Update targetRevision in ArgoCD Application manifest
        run: |
          APP_MANIFEST="project/deploy/kubernetes/overlays/prod/application.yaml"
          TAG="${{ steps.get_tag.outputs.TAG_NAME }}"

          if [ ! -f "$APP_MANIFEST" ]; then
            echo "::error::ArgoCD Application manifest '$APP_MANIFEST' not found in '$PWD'."
            exit 1
          fi

          # Update the targetRevision field
          yq e ".spec.source.targetRevision = \"$TAG\"" -i "$APP_MANIFEST"

          echo "Updated '$APP_MANIFEST':"
          cat "$APP_MANIFEST"

          # Configure Git for the commit
          git checkout main
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

          # Check if there are changes before committing
          if git diff --exit-code --quiet; then
            echo "No changes detected in $APP_MANIFEST. Skipping commit."
          else
            git add "$APP_MANIFEST"
            git commit -m "chore(argocd): Update production application to tag $TAG"
            git push
            echo "Committed and pushed update to $APP_MANIFEST for tag $TAG."
          fi
