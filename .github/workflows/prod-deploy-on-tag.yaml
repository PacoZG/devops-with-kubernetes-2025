name: Deploy Production on New Tag

on:
  push:
    tags:
      - '[0-9]+.[0-9]+' # Trigger for tags like 1.0, 2.5, 10.12

jobs:
  update-prod-app-manifest:
    runs-on: ubuntu-latest
    permissions:
      contents: write # This grants permission to push changes back to THIS repo.

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for git operations
          token: ${{ secrets.GITHUB_TOKEN }} # Use default token for pushing to same repo

      - name: Extract Tag Name
        id: get_tag
        run: |
          TAG_NAME="${GITHUB_REF#refs/tags/}"
          echo "Detected tag for production deployment: $TAG_NAME"
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_OUTPUT

      - name: Install yq (YAML Processor)
        run: |
          sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/local/bin/yq
          sudo chmod +x /usr/local/bin/yq

      - name: Update production application.yaml with new tag
        run: |
          APP_MANIFEST_PATH="project/deploy/kubernetes/overlays/prod/application.yaml"
          NEW_TAG="${{ steps.get_tag.outputs.TAG_NAME }}"

          if [ ! -f "$APP_MANIFEST_PATH" ]; then
            echo "::error::ArgoCD Application manifest '$APP_MANIFEST_PATH' not found."
            exit 1
          fi

          echo "Updating $APP_MANIFEST_PATH targetRevision to $NEW_TAG"
          # Use yq to update the targetRevision field
          yq e ".spec.source.targetRevision = \"$NEW_TAG\"" -i "$APP_MANIFEST_PATH"

          echo "--- Updated Manifest Content ---"
          cat "$APP_MANIFEST_PATH"
          echo "------------------------------"

          # Configure Git for committing
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

          # Check if there are changes before committing
          if git diff --exit-code --quiet; then
            echo "No changes detected in $APP_MANIFEST_PATH. Skipping commit."
          else
            git add "$APP_MANIFEST_PATH"
            git commit -m "chore(argocd): Update production to tag $NEW_TAG"
            git push
            echo "Committed and pushed update to $APP_MANIFEST_PATH for tag $NEW_TAG."
          fi
